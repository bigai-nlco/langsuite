{
    "intro": {
        "default": [
            "You are an autonomous intelligent agent tasked with rearranging a vitual home. System will randomly change between 1 to 5 objects in the room. Your goal is to identify which objects have changed and reset those objects to their original state.\nHere are the information you will have: \nOriginal status: The original room status that you should remember, pay your attention to the position and openness states of each of the objects. Then find out all the changed objects and reset them to their origianl states.\nObs: These are the objects you can see. You can see at most {max_view_steps} step(s) in front of you; {degree} degrees on your left, {degree} degrees on your right.\nInventory: These are the objects you are holding. You can hold at most {max_inventory} objects.\nFeedback: Whether the action is succeed or not and why is it.\n\n At each step, you can choose to think your plan or execute an action from one of the following: \n`goto [object_name]`: it means you go to the object you see.\n`pick_up [object_name]`: Use this action to pick up a pickupable and visible object within {max_manipulation_steps} step(s).\n`drop [object_name]`: it means you place the object in hand at the place just in front of you.\n`open [object_name]`: it means you open an openable and visible object within {max_manipulation_steps} step(s).\n`close [object_name]`: it means you close a closeable and visible object.\n`stop [answer]`: Issue this action when you believe the task is complete. If you believe the task is impossible to complete, provide the answer as 'N/A' in the bracket.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue ONE action that is valid given the current observation\n2. When you issue a action, and ONLY ONE action is enough, and then wait for your feedback from system.\n3. Generate the action in the correct format starting with \"Act:\" For example, \"Act: pick_up [cup_0]\" Do not add adjectives before object name.\n4. You can ONLY operate the object within your view distance.\n5. If got action failed feedback, try to take other actions to proceed the task. \n6. Issue stop action when you think you have achieved the objective. Don't generate anything after stop.\n\nHere are some examples:\n{example}\n\nRespond YES if you can play this game."
        ]
    },
    "example": {
        "default": [
            "Original status: In the north of the room, there is a armchair_0; a pen_1; In the east of the room, there is a chair_0;\nObs: Quickly look around you, You can see a armchair_0 and a chair_0.\n> Act: goto [chair_0]"
        ]
    },
    "InvalidAction": {
        "failure.actionNotFound": [
            "I can't find a valid action in your response. Please generate action in a correct format. You must put action arguments in brackets. For example,  `goto  [object_name]`, `pick_up [object_name]`, `drop [object_name]`, `open [object_name]`, `close [object_name]`."
        ],
        "failure.multipleActions": [
            "Feedback: Action failed. I found multiple actions in your response, please only respond with one action at a time. For example, \"Act: goto  [object_name]\""
        ],
        "failure.invalidObjectName": [
            "Feedback: Action failed. There is no the object \"{object}\" in your view space. Please operate the object in sight.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed.  The object is not provided or not in sight. You must choose one of the following actions and  must put the object_name in brackets. For example, `pick_up [object_name]`, `drop [object_name]`, `open [object_name]`, `close [object_name]`."
        ],
        "failure.objectNotInView": [
            "Feedback: Action failed. You can not see {object} within your view distance ({max_view_steps} step(s)).\nObs: {observation}"
        ],
        "failure.objectNotExist": [
            "Feedback: Action failed. There is no object \"{object}\" existing. Please operate the object in sight.\nObs: {observation}"
        ]
    },
    "Start": {
        "default": [
            "Let's start.\nOriginal state: {original_state}\nObs: {observation}\nwhat is your next step? "
        ]
    },
    "Pass": {
        "default": [
            "Please generate action in a correct format. You must put action arguments in brackets. For example, `pick_up [object_name]`, `drop [object_name]`, `open [object_name]`, `close [object_name]`."
        ]
    },
    "Stop": {
        "default": [
            "You stopped the game."
        ],
        "success": [
            "[SUCCESS] You have completed the task. Congratulations!"
        ],
        "failure": [
            "[FAIL] You failed to complete the task."
        ]
    },
    "GoTo":{
        "success.default": [
            "Feedback: Action succeeded. You are at {object}. \nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to goto {object}."
        ],

        "failure.alreadyAtTarget": [
            "Feedback: Action failed. You are already near target object {object} ."
        ]       
    },
    "PickUp": {
        "success.default": [
            "Feedback: Action succeeded. You picked {object} up.\nInventory: {inventory}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to pick up {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.intentoryFilled": [
            "Feedback: Action failed. You have already held enough object(s), drop one before you pick up another one. "
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. Please generate the action in the correct format. You must put object name in brackets. For example, `pick_up [cup_0]`."
        ],
        "failure.notPickupable": [
            "Feedback: Action failed. Object {object} is not pickupable.\nObs: {observation}"
        ]
    },
    "Drop": {
        "success.default": [
            "Feedback: Action succeeded. You dropped {object}.\nInventory: {inventory}\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to drop {object}.\nObs: {observation}"
        ],
        "failure.emptyInventory": [
            "Feedback: Action failed. Inventory is empty, nothing to drop.\nObs: {observation}"
        ],
        "failure.objectNotInInventory": [
            "Feedback: Action failed. Object {object} is not in your inventory.\nInventory: {inventory}."
        ]
    },
    "Open": {
        "success.default": [
            "Feedback: Action succeeded. You opened {object} to openness {openness}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to open {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notOpenable": [
            "Feedback: Action failed. Object {object} is not openable.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. You did not provide an object or the object name is wrong. Please operate the object in sight.\nObs: {observation}"
        ]
    },
    "Close": {
        "success.default": [
            "Feedback: Action succeeded. You closed {object}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to close {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notCloseable": [
            "Feedback: Action failed. Object {object} is not Closeable.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. You did not provide an object or the object name is wrong. Please operate the object in sight.\nObs: {observation}"
        ]
    }
}
