{
    "intro": {
        "default": [
            "You are an autonomous intelligent agent tasked with rearranging a vitual home. System will randomly change between 1 to 5 objects in the room. Your goal is to identify which objects have changed and reset those objects to their original state.\nHere are the information you will have: \nOriginal status: The original room status that you should remember, pay your attention to the position and openness states of each of the objects. Then find out all the changed objects and reset them to their origianl states.\nObs: These are the objects you can see. You can see at most {max_view_steps} step(s) in front of you; {degree} degrees on your left, {degree} degrees on your right.\nInventory: These are the objects you are holding. You can hold at most {max_inventory} objects.\nFeedback: Whether the action is succeed or not and why is it.\n\n At each step, you can choose to think your plan or execute an action from one of the following: \n`move_ahead`: it means you move ahead by 1 step.\n`turn_left`: it means you turn left 90 degrees.\n`turn_right`: it means you turn right 90 degrees.\n`pick_up [object_name]`: Use this action to pick up a pickupable and visible object within {max_manipulation_steps} step(s).\n`drop [object_name]`: it means you place the object in hand at the place just in front of you.\n`open [object_name]`: it means you open an openable and visible object within {max_manipulation_steps} step(s).\n`close [object_name]`: it means you close a closeable and visible object.\n`stop [answer]`: Issue this action when you believe the task is complete. If you believe the task is impossible to complete, provide the answer as 'N/A' in the bracket.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue an action or your thought that is valid given the current observation\n2. You should only issue one action at a time.\n3. Generate the action in the correct format. For example, pick_up [cup_0].\n4. Issue stop action when you think you have achieved the objective. Don't generate anything after stop."
        ]
    },
    "example": {
        "default": [
            "Original status: In the north of the room, there is a armchair_0; a pen_1; In the east of the room, there is a chair_0;.\nObs: You can see nothing ahead.\n> Thought: To solve the task, I need to explore the room to find out what objects have been changed. I see a pen_1, because I am in the south of the room, so the pen_1 is in the south of the room, but I remember the pen_1 should be in the north of the room according to the origianl status. So I need to pick it up and put it back.\nOK.\n> Act: pick_up [pen_1]"
        ]
    },
    "InvalidAction": {
        "failure.actionNotFound": [
            "I can't find a valid action in your response. Please generate action in a correct format. You must put action arguments in brackets. For example,  `move_ahead`, `turn_left`, `turn_right`, `pick_up [object_name]`, `drop [object_name]`, `open [object_name]`, `close [object_name]`."
        ],
        "failure.multipleActions": [
            "Feedback: Action failed. I found multiple actions in your response, please only respond with one action at a time. For example, \"Act: move_ahead\""
        ],
        "failure.invalidObjectName": [
            "Feedback: Action failed. There is no the object \"{object}\" in your view space. Please operate the object in sight.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Please generate action in a correct format. You must choose one of the following actions and  put action arguments in brackets. For example, `pick_up [object_name]`, `drop [object_name]`, `open [object_name]`, `close [object_name]`."
        ],
        "failure.objectNotInView": [
            "Feedback: Action failed. You can not see {object} within your view distance ({max_view_steps} step(s)).\nObs: {observation}"
        ],
        "failure.objectNotExist": [
            "Feedback: Action failed. There is no object \"{object}\" existing. Please operate the object in sight.\nObs: {observation}"
        ]
    },
    "Start": {
        "default": [
            "Let's start.\nOriginal state: {original_state}\nObs: {observation}\nwhat is your next step? "
        ]
    },
    "Pass": {
        "default": [
            "Please generate action in a correct format. You must put action arguments in brackets. For example, `pick_up [object_name]`, `drop [object_name]`, `open [object_name]`, `close [object_name]`."
        ]
    },
    "Stop": {
        "default": [
            "You stopped the game."
        ],
        "success": [
            "[SUCCESS] You have completed the task. Congratulations!"
        ],
        "failure": [
            "[FAIL] You failed to complete the task."
        ]
    },
    "MoveAhead": {
        "success.default": [
            "Feedback: Action succeeded. Moved forward by 1 step.\nObs: {observation}"
        ],
        "failure.isBlocked": [
            "Feedback: Action failed. Can not move ahead, because there is an obstacle ahead.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed.\nObs: {observation}"
        ],
        "default": [
            "Feedback: Action succeeded.\nObs: {observation}"
        ]
    },
    "TurnLeft": {
        "success.default": [
            "Feedback: Action succeeded. Turned left by '{degree}' degrees.\nObs: {observation}"
        ]
    },
    "TurnRight": {
        "success.default": [
            "Feedback: Action succeeded. Turned right by '{degree}' degrees.\nObs: {observation}"
        ]
    },
    "PickUp": {
        "success.default": [
            "Feedback: Action succeeded. You picked {object} up.\nInventory: {inventory}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to pick up {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.intentoryFilled": [
            "Feedback: Action failed. You have already held enough object(s), drop one before you pick up another one. "
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. Please generate the action in the correct format. You must put object name in brackets. For example, `pick_up [cup_0]`."
        ],
        "failure.notPickupable": [
            "Feedback: Action failed. Object {object} is not pickupable.\nObs: {observation}"
        ]
    },
    "Drop": {
        "success.default": [
            "Feedback: Action succeeded. You dropped {object}.\nInventory: {inventory}\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to drop {object}.\nObs: {observation}"
        ],
        "failure.emptyInventory": [
            "Feedback: Action failed. Inventory is empty, nothing to drop.\nObs: {observation}"
        ],
        "failure.objectNotInInventory": [
            "Feedback: Action failed. Object {object} is not in your inventory.\nInventory: {inventory}."
        ]
    },
    "Open": {
        "success.default": [
            "Feedback: Action succeeded. You opened {object} to openness {openness}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to open {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notOpenable": [
            "Feedback: Action failed. Object {object} is not openable.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. You did not provide an object or the object name is wrong. Please operate the object in sight.\nObs: {observation}"
        ]
    },
    "Close": {
        "success.default": [
            "Feedback: Action succeeded. You closed {object}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to close {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notCloseable": [
            "Feedback: Action failed. Object {object} is not Closeable.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. You did not provide an object or the object name is wrong. Please operate the object in sight.\nObs: {observation}"
        ]
    }
}
