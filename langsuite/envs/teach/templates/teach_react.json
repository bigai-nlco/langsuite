{
    "intro": {
        "default": [
            ""
        ],
        "task_instruction_for_commander": [
            "You are commander, an autonomous intelligent agent tasked with navigating a virtual home. You will be given a household task. These tasks will be accomplished through specific actions you post and through collaboration with follower. Note that you cannot interact with objects. You can only view the scene and guide follower to complete the task by using `chat`. You can not know the action history of follower.\n\nHere's the information you'll have: \nTask: This is the task you are trying to accomplish.\nObs: These are the objects you can see. You can see at most {max_view_steps} step(s) in front of you; {degree} degrees on your left, {degree} degrees on your right.\nInventory: These are the objects you are holding. You can hold at most {max_inventory} objects.\nFeedback: Whether the action is succeed or not and why is it.\n\nAt each step, you can choose to think your plan or execute an action from one of the following: \n`move_ahead`: it means you move ahead by 1 step.\n`move_back`: it means you move back by 1 step.\n`turn_left`: it means you turn left 90 degrees.\n`turn_right`: it means you turn right 90 degrees.\n`no_op`: it means you do nothing.\n`pan_left`: it means you move left by 1 step.\n`pan_right`: it means you move right by 1 step.\n`open_progress_check`: it means you check the progress of the task, you will be told which condition is failed.\n`chat [chat_message]`: it means you send a chat to follower to guide it to do the task.\n`select_oid [object_name]`: it means that you can select one object and get its position relative to the follower.\n`search_object [object_type]`: it means that you can search for an object type and select one, which will then get its position relative to the follower.\n`go_to [object_name]`: it means you travel to an available location next to the object.\n`stop [answer]`: Issue this action when you believe the task is complete. If you believe the task is impossible to complete, provide the answer as \"N/A\" in the bracket.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue an action or your thought that is valid given the current observation\n2. You should only issue one action at a time.\n3. Generate the action in the correct format. For example, pick_up [cup].\n4. State your thought or think process starting with \"Thought:\"\n5. Issue stop action when you think you have achieved the objective. Don't generate anything after stop.\n6. Please do not generate the same operation as the last one.\n\nHere are some examples:\n{example}\n\nRespond YES. if you can play this game."
        ],
        "task_instruction_for_follower": [
            "You are follower, an autonomous intelligent agent tasked with navigating a virtual home. You will be given a household task. These tasks will be accomplished through specific actions you post and through collaboration with commander. Note that you can interact with objects but have no access to task information. You can use `chat` to ask commander for information to accomplish the task. You can not know the action history of follower.\n\nHere's the information you'll have: \nTask: This is the task you are trying to accomplish.\nObs: These are the objects you can see. You can see at most {max_view_steps} step(s) in front of you; {degree} degrees on your left, {degree} degrees on your right.\nInventory: These are the objects you are holding. You can hold at most {max_inventory} objects.\nFeedback: Whether the action is succeed or not and why is it.\n\nAt each step, you can choose to think your plan or execute an action from one of the following: \n`move_ahead`: it means you move ahead by 1 step.\n`move_back`: it means you move back by 1 step.\n`turn_left`: it means you turn left 90 degrees.\n`turn_right`: it means you turn right 90 degrees.\n`no_op`: it means you do nothing.\n`pan_left`: it means you move left by 1 step.\n`pan_right`: it means you move right by 1 step.\n`open_progress_check`: it means you check the progress of the task, you will be told which condition is failed.\n`chat [chat_message]`: it means you send a chat to ask for information from commander to complete the task.\n`go_to [object_name]`: it means you travel to an available location next to the object.\n`pick_up [object_name]`: Use this action to pick_up a pickupable and visible object within {max_manipulation_steps} step(s).\n`place [receptacle_name]`: it means you places the object in hand at the receptacle.\n`open [object_name]`: it means you open an openable and visible object within {max_manipulation_steps} step(s).\n`close [object_name]`: it means you close a closeable and visible object within 1 step ahead.\n`toggle_on [object_name]`: it means you toggle a toggleable and visible object on within 1 step ahead.\n`toggle_off [object_name]`: it means you toggle a toggleable and visible object off within 1 step ahead.\n`slice [object_name]`: it means you slice a sliceable and visible object within 1 step ahead.\n`stop [answer]`: Issue this action when you believe the task is complete. If you believe the task is impossible to complete, provide the answer as \"N/A\" in the bracket.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue an action or your thought that is valid given the current observation\n2. You should only issue one action at a time.\n3. Generate the action in the correct format. For example, pick_up [cup].\n4. State your thought or think process starting with \"Thought:\"\n5. Issue stop action when you think you have achieved the objective. Don't generate anything after stop.\n6. Please do not generate the same operation as the last one.\n\nHere are some examples:\n{example}\n\nRespond YES. if you can play this game."
        ],
        "message_instruction_for_commander": [
            "\nYou are commander, please generate a short message to send to follower to help us achieve the goal as soon as possible based on information above.\nNote: The generated message should be accurate, helpful and brief. Do not generate repetitive messages.\n"
        ],
        "message_instruction_for_follower": [
            "\nYou are follower, please generate a short message to send to follower to help us achieve the goal as soon as possible based on information above.\nNote: The generated message should be accurate, helpful and brief. Do not generate repetitive messages.\n"
        ]
    },
    "example": {
        "commander": [
            "Task: put a clean lettuce on diningtable.\nObs: You can see nothing ahead.\n> Thought: I need to check the task progress.\n> Act: open_progress_check\nFeedback: Action failed. One clean lettuce needs to be on dingingtable.\n> Thought: I need to tell the task to follower.\n> Act: chat [Please put a clean lettuce in diningtable.] \nFeedback: Action succeeded.\nfollower: Where can I find lettuce?\nThought: To solve the task, I need to guide follower to find and take a lettuce, then clean it with sinkbasin, then put it in diningtable.\n> Act: select_oid [lettuce_0]\nFeedback: Action succeeded. lettuce_0 is in front and left of follower."
        ],
        "follower": [
            "Task: You can use `chat` to ask commander for task information.\nObs: You can see nothing ahead.\n> Thought: I need to wait information from commander.\n> Act: no_op\nFeedback: Action succeeded.\ncommander: Please put a clean lettuce in diningtable.\n> Thought: I need to ask commander for the location of the lettuce.\n> Act: chat [Where can I find lettuce?]\nFeedback: Action succeeded.\nObs: You can see nothing ahead.\n> Thought: To solve the task, I need to find and take a lettuce, then clean it with sinkbasin, then put it in diningtable.\nBut I don't know where lettuce is, I can wait information from follower or explore by myself.\n> Act: pan_left\nFeedback: Action succeeded.\nObs: In front of you, You see a lettuce_0."
        ]

    },
    "InvalidAction": {
        "failure.actionNotFound": [
            "Feedback: Action failed. There is no valid action in your response. Please generate action in a correct format. You must put action arguments in brackets. For example, `open_progress_check`, `move_ahead`, `turn_left`, `turn_right`, `pick_up [object_name]`, `place [receptacle_name]`, `open [object_name]`, `close [object_name]`, `toggle_on [object_name]`, `toggle_off [object_name]`, `slice [object_name]`, `chat [what you want to say]`."
        ],
        "failure.multipleActions": [
            "Feedback: Action failed. Multiple actions found in your response, please only respond with one action at a time. For example, \"Act: move_ahead\""
        ],
        "failure.invalidObjectName": [
            "Feedback: Action failed. There is no the object {object} in your view space. Please operate the object in sight.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. Please generate action in a correct format. You must put action arguments in square brackets. For example,  `pick_up [object_name]`, `place [receptacle_name]`, `open [object_name]`, `close [object_name]`, `toggle_on [object_name]`, `toggle_off [object_name]`, `slice [object_name]`."
        ],
        "failure.objectNotExist": [
            "Feedback: Action failed. There is no object {object} existing. Please operate the object in sight.\nObs: {observation}"
        ],
        "failure.objectNotInView": [
            "Feedback: Action failed. You can not see {object} in your view space.\nObs: {observation}"
        ],
        "failure.objectNotInMainpulation": [
            "Feedback: Action failed. Object {object} is not in your manipulation distance.\nObs: {observation}"
        ]
    },
    "Start": {
        "default": [
            "Task: {task_description}\nObs: {observation}\nWhat is your next step? Let's think and act."
        ]
    },
    "Stop": {
        "default": [
            "You stopped the game."
        ],
        "success": [
            "[SUCCESS] You have completed the task. Congratulations!"
        ],
        "failure": [
            "[FAIL] You failed to complete the task."
        ]
    },
    "MoveAhead": {
        "success.default": [
            "Feedback: Action succeeded. Moved forward by 1 step.\nObs: {observation}"
        ],
        "failure.isBlocked": [
            "Feedback: Action failed. Can not move ahead, because there is an obstacle ahead.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed.\nObs: {observation}"
        ]
    },
    "MoveBack": {
        "success.default": [
            "Feedback: Action succeeded. Moved back by 1 step.\nObs: {observation}"
        ],
        "failure.isBlocked": [
            "Feedback: Action failed. Can not move back, because there is an obstacle back.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed.\nObs: {observation}"
        ]
    },
    "PanLeft": {
        "success.default": [
            "Feedback: Action succeeded. Moved left by 1 step.\nObs: {observation}"
        ],
        "failure.isBlocked": [
            "Feedback: Action failed. Can not move left, because there is an obstacle left.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed.\nObs: {observation}"
        ]
    },
    "PanRight": {
        "success.default": [
            "Feedback: Action succeeded. Moved right by 1 step.\nObs: {observation}"
        ],
        "failure.isBlocked": [
            "Feedback: Action failed. Can not move right, because there is an obstacle right.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed.\nObs: {observation}"
        ]
    },
    "GoTo": {
        "success.default": [
            "Feedback: Action succeeded. Go to {object}. {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Can not go to {object}, because there is an obstacle. {observation}"
        ],
        "failure.alreadyAtTarget": [
            "Feedback: Action failed. You are already at {object}. {observation}"
        ],
        "failure.objectNotFound": [
            "Feedback: Action failed. The {object_id} can not match any object. {observation}"
        ]
    },
    "TurnLeft": {
        "success.default": [
            "Feedback: Action succeeded. Turn left by '{degree}' degrees.\nObs: {observation}"
        ]
    },
    "TurnRight": {
        "success.default": [
            "Feedback: Action succeeded. Turn right by '{degree}' degrees.\nObs: {observation}"
        ]
    },
    "PickUp": {
        "success.default": [
            "Feedback: Action succeeded. You picked {object} up.\nInventory: {inventory}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to pick up {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.intentoryFilled": [
            "Feedback: Action failed. You have already held enough object(s), drop one before you pick up another one. "
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. Please generate the action in the correct format. You must put object name in brackets. For example, `pick_up [cup]`."
        ]
    },
    "Place": {
        "success.default": [
            "Feedback: Action succeeded. You put {object} to {receptacle_name}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to place.\nObs: {observation}"
        ],
        "failure.inventoryNotOne": [
            "Feedback: Action failed. The object number of inventory is not one.\nObs: {observation}"
        ]
    },
    "Pour": {
        "success.default": [
            "Feedback: Action succeeded. You pour liquid from {object} to {receptacle_name}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to pour.\nObs: {observation}"
        ],
        "failure.inventoryNotOne": [
            "Feedback: Action failed. The object number of inventory is not one.\nObs: {observation}"
        ],
        "failure.notFilledWithLiquid": [
            "Feedback: Action failed. Your held {object} is not filled with liquid, cannot pour into {receptacle_name}.\nObs: {observation}"
        ]
    },
    "Open": {
        "success.default": [
            "Feedback: Action succeeded. You opened {object} to openness {openness}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to open {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notOpenable": [
            "Feedback: Action failed. Object {object} is not openable.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. You did not provide an object or the object name is wrong. Please operate the object in sight.\nObs: {observation}"
        ]
    },
    "Close": {
        "success.default": [
            "Feedback: Action succeeded. You closed {object}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to close {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notCloseable": [
            "Feedback: Action failed. Object {object} is not Closeable.\nObs: {observation}"
                        ]
    },
    "ToggleOn": {
        "success.default": [
            "Feedback: Action succeeded. You toggled {object} on.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to toggle {object} on.\nObs: {observation}"
        ],
        "failure.notToggleable": [
            "Feedback: Action failed. Object {object} is not toggleable.\nObs: {observation}"
                ]
    },
    "ToggleOff": {
        "success.default": [
            "Feedback: Action succeeded. You toggled {object} off.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to toggle {object} off.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notCloseable": [
            "Feedback: Action failed. Object {object} is not toggleable.\nObs: {observation}"
                ]
    },
    "Slice": {
        "success.default": [
            "Feedback: Action succeeded. You sliced {object}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to slice {object}.\nObs: {observation}"
        ],
        "failure.objectIsSliced": [
            "Feedback: Action failed. Object {object} is already sliced.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notSliceable": [
            "Feedback: Action failed. Object {object} is not sliceable.\nObs: {observation}"
        ]
    },
    "OpenProgressCheck": {
        "success.default": [
            "Feedback: Action succeeded. All goal conditions are satisfied."
        ],
        "failure.default": [
            "Feedback: Action failed. The total number of goal conditions is {goal_conditions_total}, the satisfied number is {goal_conditions_satisfied}.\nConditions unsatisfied: {condition_failure_descs}"
        ]
    },
    "SelectOid": {
        "success.default": [
            "Feedback: Action succeeded. {object} is {location}."
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to select {object}."
        ]
    },
    "Chat": {
        "success.default": [
            "Feedback: Action succeeded."
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to generate chat response."
        ]
    }

}
