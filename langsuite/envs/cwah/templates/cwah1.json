{
    "intro": {
        "default": [
            "Alice and Bob are working together to finish the housework. They have a shared goal and need to communicate with each other to achieve the goal. "
        ],
        "task_instruction": [
            "I'm $AGENT_NAME$. I'm in a hurry to finish the housework with my friend $OPPO_NAME$ together. Given our shared goal, dialogue history, and my progress and previous actions, please help me choose the best available action to achieve the goal as soon as possible. Note that I can hold two objects at a time and there are no costs for holding objects. All objects are denoted as <name> (id), such as <table> (712).\nGoal: $GOAL$\nProgress: $PROGRESS$\nDialogue history:\nAlice: \"Hi, I'll let you know if I find any goal objects and finish any subgoals, and ask for your help when necessary.\"\nBob: \"Thanks! I'll let you know if I find any goal objects and finish any subgoals, and ask for your help when necessary.\"\n$DIALOGUE_HISTORY$\nPrevious actions: $ACTION_HISTORY$\nAvailable actions:\n$AVAILABLE_ACTIONS$\nAnswer:"
        ],
        "message_instruction": [
            "I'm $AGENT_NAME$. I'm in a hurry to finish the housework with my friend $OPPO_NAME$ together. Given our shared goal, dialogue history, and my progress and previous actions, please help me generate a short message to send to $OPPO_NAME$ to help us achieve the goal as soon as possible. Note that I can hold two objects at a time and there are no costs for holding objects. All objects are denoted as <name> (id), such as <table> (712).\nGoal: $GOAL$\nProgress: $PROGRESS$\nPrevious actions: $ACTION_HISTORY$\nDialogue history:\nAlice: \"Hi, I'll let you know if I find any goal objects and finish any subgoals, and ask for your help when necessary.\"\nBob: \"Thanks! I'll let you know if I find any goal objects and finish any subgoals, and ask for your help when necessary.\"\n$DIALOGUE_HISTORY$\n\nNote: The generated message should be accurate, helpful and brief. Do not generate repetitive messages.\n"
        ]
    },

    "InvalidAction": {
        "default": [
            "Invalid action {action}"
        ]
    },

    "MoveAhead": {
        "success.default": [
            "Action succeeded. Moved forward by '{distance}' meter(s)."
        ],
        "failure.isBlocked": [
            "Action failed. Can not move ahead, because there is an obstacle ahead."
        ],
        "failure.default": [
            "Action Move_AHEAD failed."
        ],
        "default": [
            "Action Move_AHEAD"
        ]
    },

    "TurnLeft": {
        "success.default": [
            "Action succeeded. Turn left by '{degree}' degrees."
        ]
    },

    "TurnRight": {
        "success.default": [
            "Action succeeded. Turn right by '{degree}' degrees."
        ]
    },
    "PanLeft": {
        "success.default": [
            "Action succeeded. Pan left by '{distance}' meter(s)."
        ]
    },

    "PanRight": {
        "success.default": [
            "Action succeeded. Pan right by '{distance}' meter(s)."
        ]
    },
    "PickUp": {
        "success.default": [
            "You have successfully picked {object} up."
        ],
        "failure.default": [
            "Failed to pick up {object}"
        ],
        "failure.notInView": [
            "Action failed. Object {object} is not in view space"
        ],
        "failure.intentoryFilled": [
            "Inventory filled. Failed to pick up object {object}."
        ]
    },

    "Put": {
        "success.default": [
            "You have successfully put {object} to {receptacle}."
        ],
        "failure.default": [
            "Failed to put {object} to {receptacle}"
        ],
        "failure.notInView": [
            "Action failed. Receptacle {object} is not in view space"
        ],
        "failure.NotInInventory": [
            "Action failed. {object} is no in inventory."
        ]
    },

    "Open": {
        "success.default": [
            "You have successfully Opened {object} to openness {openness}."
        ],
        "failure.default": [
            "Failed to open {object}"
        ],
        "failure.notInView": [
            "Action failed. Object {object} is not in view space"
        ],
        "failure.notOpenable": [
            "Action failed. Object {object} is not openable"
        ]
    },

    "Close": {
        "success.default": [
            "You have successfully Closed {object}."
        ],
        "failure.default": [
            "Failed to close {object}"
        ],
        "failure.notInView": [
            "Action failed. Object {object} is not in view space"
        ],
        "failure.notCloseable": [
            "Action failed. Object {object} is not Closeable"
        ]
    }
}
