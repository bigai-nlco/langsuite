{
    "intro": {
        "default": [
            "You are an autonomous intelligent agent tasked with navigating a vitual home. You will be given a household task. These tasks will be accomplished through the use of specific actions you can issue.\n\nHere's the information you'll have: \nTask: This is the task you are trying to accomplish.\nObs: These are the objects you can see.\nInventory: These are the objects you are holding.\nFeedback: Whether the action is succeed or not and why is it.\n\nAt each step, you can choose to think your plan or execute an action from one of the following: \n`move_ahead`: it means you move ahead by 1 step.\n`turn_left`: it means you turn left 90 degrees.\n`turn_right`: it means you turn right 90 degrees.\n`pick_up [object_name]`: Use this action to pick_up a pick_upable and visible object within your manipulation distance.\n`drop [object_name]`: it means you places the object in hand at the place just in front of it.\n`open [object_name]`: it means you open an openable and visible object within your manipulation distance.\n`close [object_name]`: it means you close a closeable and visible object.\n`toggle_on [object_name]`: it means you toggle a toggleable and visible object on.\n`toggle_off [object_name]`: it means you toggle a toggleable and visible object off.\n`slice [object_name]`: it means you slice a sliceable and visible object.\n`put [object_name, receptacle_name]`: it means you places the object in hand into/onto the receptacle.\n`stop [answer]`: Issue this action when you believe the task is complete. If you believe the task is impossible to complete, provide the answer as \"N/A\" in the bracket.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue ONE action or ONE thought that is valid given the current observation\n2. When you issue a action, and ONLY ONE action is enough, and then wait for your feedback.\n3. Generate the action in the correct format starting with \"Act:\". For example, \"Act: pick_up [cup_0]\".\n4. State your thought or think process starting with \"Thought:\"\n5. Remember you are facing NORTH at the begining.\n6. You can ONLY operate the object within your view distance.\n7. If got action failed feedback, try to take other actions to proceed the task. \n8. Issue stop action when you think you have achieved the objective. Don't generate anything after stop.\n\nHere are some examples:\n{example}\n\nRespond YES if you can play this game."
        ]
    },
    "example": {
        "default1": [
            "Task: put a clean lettuce in diningtable.\nObs: In front of you, You see a stoveburner_2. On your left, you see a stoveburner_1; a stoveburner_3; a stoveknob_3. On your right, you see a countertop_1; a tomato_0; a toaster_0.\n> Thought: I see a stoveburner_3 and a toaster_0 so I am probably in the middle of a kitchen. I was facing north in my last step so after I turned left now I am facing west; I have taken 1 steps; The subtasks that I have finished is: find the lettuce; I am not currently holding a lettuce_1. To solve the task, I need to find a sinkbasin, then clean the lettuce_1 with it, then put the lettuce_1 on a diningtable. I remember a sinkbasin is in the south, as now I am facing west so I should turn left to facing south to find the sinkbasin. \nOK.\n> Act: turn_left"
        ],
        "default": [
            "Task: put a clean lettuce in diningtable.\nObs: In front of you, You see a stoveburner_2. On your left, you see a stoveburner_1; a sinkbasin_1. On your right, you see a countertop_1; a tomato_0; a toaster_0.\n> Thought: I see a stoveburner_3 and a toaster_0 so I am probably in the middle of a kitchen. I am facing north at the begining; I should remember what I see when facing north, so that I can find them easily when necessary; I have taken 0 steps; I am not currently holding any objects. To solve the task, I need to find a lettuce, then clean it with the sinkbasin, then put it in diningtable. I have already found a sinkbasin_1, I need to find a lettuce and then go back to the sinkbasin_1. \nOK.\n> Act: turn_left\nFeedback: Action succeeded. Turn left by '90' degrees.\nObs: In front of you, You see a fridge_0. On your left, you see a countertop_1. \n> Thought:  I found a fridge_0 the lettuce is probably there. So I should go to the fridge_0, open it and take the lettuce.\nOK.\n> Act: move_ahead\nFeedback: Action succeeded. Moved forward by 1 step.\nObs: In front of you, You see a fridge_0.\n> Thought: Now I am facing west; I have taken 1 steps; I am not currently holding any objects. I should open the fridge_0 to find the lettuce.\nOK.\n> Act: open [fridge_0]\nFeedback: Action succeeded. You opened fridge_0 to openness 1.0.\nObs: In front of you, You see an opened fridge_0, in it you see a tomato_1, a lettuce_1.\n> Thought: I found the lettuce_1 and I should pick it up. \nOK.\n> Act: pick_up [lettuce_1]\nFeedback: Action succeeded.You picked lettuce_1 up.\nInventory: lettuce_1\nObs:In front of you, You see an opened fridge_0, in it you see a tomato_1.\n> Thought: I should close the fridge_0 and go back to the sinkbasin_1.\nOK.\n> Act: close [fridge_0]\nFeedback: Action succeeded. You closed fridge_0.\nObs: In front of you, You see a fridge_0.\n> Thought: Now I am facing west; I have taken 1 steps; I am now holding the lettuce_1. I remember the sinkbasin_1 is in north. So I should first turn right to facing north to find sinkbasin_1 and then clean the lettuce_1. \nOK.\n> Act: turn_right\nFeedback: Action succeeded. Turn right by '90' degrees.\nObs: In front of you, you see a stoveburner_1; a sinkbasin_1. On your right, You see a stoveburner_2.\n> Thought: Now I am facing north; I have taken 1 steps; I am holding the lettuce_1. I see the  sinkbasin_1 is in north. So I should first turn right to facing north to find sinkbasin_1 and then clean the lettuce_1. \nOK "
        ],
        "default2": [
            "Task: put a clean lettuce in diningtable.\nObs: In front of you, You see a stoveburner_2. On your left, you see a stoveburner_1; a sinkbasin_1. On your right, you see a countertop_1; a tomato_0; a toaster_0.\n> Thought: Firstly, summarize my current status. I should localize myself in this room. I see a stoveburner_3 and a toaster_0 so I am probably in the middle of a kitchen. I am facing north at the begining; I should remember what I see when facing north, so that I can find them easily when necessary; I have taken 0 steps; I am not currently holding any objects. Secondly, plan what to do next. To solve the task, I need to find a lettuce, then clean it with the sinkbasin, then put it in diningtable. I have already found a sinkbasin_1, I need to find a lettuce and then go back to the sinkbasin_1. \nOK.\n> Act: turn_left\nFeedback: Action succeeded. Turn left by '90' degrees.\nObs: In front of you, You see a fridge_0. On your left, you see a countertop_1. \n> Thought:Firstly, summarize my current status. After turned left I am facing west now. I have taken 0 steps; I am not currently holding any objects. Secondly, plan what to do next. I found a fridge_0 the lettuce is probably there. So I should go to the fridge_0, open it and take the lettuce.\nOK.\n> Act: move_ahead\nFeedback: Action succeeded. Moved forward by 1 step.\nObs: In front of you, You see a fridge_0.\n> Thought: Firstly, summarize my current status. Now I am facing west; I have taken 1 steps; I am not currently holding any objects. Secondly, plan what to do next. I should open the fridge_0 to find the lettuce.\nOK.\n> Act: open [fridge_0]\nFeedback: Action succeeded. You opened fridge_0 to openness 1.0.\nObs: In front of you, You see an opened fridge_0, in it you see a tomato_1, a lettuce_1.\n> Thought: Firstly, summarize my current status. Now I am facing west; I have taken 1 steps; I have opened the fridge_0. I am not currently holding any objects. Secondly, plan what to do next. I found the lettuce_1 and I should pick it up. \nOK.\n> Act: pick_up [lettuce_1]\nFeedback: Action succeeded. You picked lettuce_1 up.\nInventory: lettuce_1\nObs:In front of you, You see an opened fridge_0, in it you see a tomato_1.\n> Thought: Firstly, summarize my current status. Now I am facing west; I have taken 1 steps; I have opened the fridge_0 and picked the lettuce_1 up. I am now holding the lettuce_1. Secondly, plan what to do next. I should close the fridge_0 and go back to the sinkbasin_1.\nOK.\n> Act: close [fridge_0]\nFeedback: Action succeeded. You closed fridge_0.\nObs: In front of you, You see a fridge_0.\n> Thought: Firstly, summarize my current status. Now I am facing west; I have taken 1 steps; I have closed the fridge_0. I am now holding the lettuce_1. Secondly, plan what to do next. I remember the sinkbasin_1 is in north. So I should first turn right to facing north to find sinkbasin_1 and then clean the lettuce_1. \nOK.\n> Act: turn_right\nFeedback: Action succeeded. Turn right by '90' degrees.\nObs: In front of you, you see a stoveburner_1; a sinkbasin_1. On your right, You see a stoveburner_2.\n> Thought: Firstly, summarize my current status. After turned right I am facing north; I have taken 1 steps; I have taken lettuce_1 from the fridge_0. I am now holding the lettuce_1. Secondly, plan what to do next. I see the sinkbasin_1 is in north. So I should go to sinkbasin_1. \nOK "
        ]
    },
    "InvalidAction": {
        "failure.actionNotFound": [
            "Feedback: Action failed. There is no valid action in your response. Please generate action in a correct format. You must put action arguments in brackets. Choose one action from the list: `move_ahead`, `turn_left`, `turn_right`, `pick_up [object_name]`, `drop`, `open [object_name]`, `close [object_name]`, `toggle_on [object_name]`, `toggle_off [object_name]`, `slice [object_name]`, put [object_name, receptacle_name]."
        ],
        "failure.multipleActions": [
            "Feedback: Action failed. I found multiple actions in your response, please only respond with one action at a time. For example, \"Act: move_ahead\""
        ],
        "failure.selfFeedback": [
            "Feedback: Action failed. Do not imagine feedback in your response, only respond with one action and wait for system's feedback. For example, \"Act: move_ahead\""
        ],
        "failure.invalidObjectName": [
            "Feedback: Action failed. There is no the object \"{object}\" in your view space. Please operate the object in sight.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. The object is not provided or not in sight. You can only manipulate the object in sight. You must put the object_name in brackets. For example, `pick_up [object_name]`, `drop`, `open [object_name]`, `close [object_name]`, `toggle_on [object_name]`, `toggle_off [object_name]`, `slice [object_name]`, put [object_name, receptacle_name]."
        ],
        "failure.objectNotExist": [
            "Feedback: Action failed. There is no object \"{object}\" existing. Please operate the object in sight.\nObs: {observation}"
        ],
        "failure.objectNotInView": [
            "Feedback: Action failed. You can not see {object} in your view space.\nObs: {observation}"
        ],
        "failure.objectNotInMainpulation": [
            "Feedback: Action failed. Object {object} is not in your manipulation distance ({manipulation_distance} step).\nObs: {observation}"
        ]
    },
    "Start": {
        "default": [
            "Task: {task_description}\nObs: {observation}\nWhat is your next step? try to self-locate and think before act."
        ]
    },
    "Stop": {
        "default": [
            "You stopped the game."
        ],
        "success": [
            "[SUCCESS] You have completed the task. Congratulations!"
        ],
        "failure": [
            "[FAIL] You failed to complete the task."
        ]
    },
    "MoveAhead": {
        "success.default": [
            "Feedback: Action succeeded. Moved forward by 1 step.\nObs: {observation}"
        ],
        "failure.isBlocked": [
            "Feedback: Action failed. Can not move ahead, because there is an obstacle ahead.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed.\nObs: {observation}"
        ],
        "default": [
            "Feedback: Action succeeded.\nObs: {observation}"
        ]
    },
    "TurnLeft": {
        "success.default": [
            "Feedback: Action succeeded. Turn left by '{degree}' degrees.\nObs: {observation}"
        ]
    },
    "TurnRight": {
        "success.default": [
            "Feedback: Action succeeded. Turn right by '{degree}' degrees.\nObs: {observation}"
        ]
    },
    "PickUp": {
        "success.default": [
            "Feedback: Action succeeded. You picked {object} up.\nInventory: {inventory}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to pick up {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.intentoryFilled": [
            "Feedback: Action failed. You have already held enough object(s), drop one before you pick up another one. "
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. Please generate the action in the correct format. You must put object name in brackets. For example, `pick_up [cup]`."
        ],
        "failure.notPickupable": [
            "Feedback: Action failed. Object {object} is not pickable.\nObs: {observation}"
        ]
    },
    "Drop": {
        "success.default": [
            "Feedback: Action succeeded. You dropped {object}.\nInventory: {inventory}\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to drop {object}.\nObs: {observation}"
        ],
        "failure.emptyInventory": [
            "Feedback: Action failed. Inventory is empty, nothing to drop.\nObs: {observation}"
        ],
        "failure.objectNotInInventory": [
            "Feedback: Action failed. Object {object} is not in your inventory.\nInventory: {inventory}."
        ]
    },
    "Open": {
        "success.default": [
            "Feedback: Action succeeded. You opened {object} to openness {openness}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to open {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notOpenable": [
            "Feedback: Action failed. Object {object} is not openable.\nObs: {observation}"
        ],
        "failure.objectNotProvide": [
            "Feedback: Action failed. You did not provide an object or the object name is wrong. Please operate the object in sight.\nObs: {observation}"
        ]
    },
    "Close": {
        "success.default": [
            "Feedback: Action succeeded. You closed {object}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to close {object}.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notCloseable": [
            "Feedback: Action failed. Object {object} is not Closeable.\nObs: {observation}"
        ]
    },
    "ToggleOn": {
        "success.default": [
            "Feedback: Action succeeded. You toggled {object} on.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to toggle {object} on.\nObs: {observation}"
        ],
        "failure.notToggleable": [
            "Feedback: Action failed. Object {object} is not toggleable.\nObs: {observation}"
        ]
    },
    "ToggleOff": {
        "success.default": [
            "Feedback: Action succeeded. You toggled {object} off.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to toggle {object} off.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notCloseable": [
            "Feedback: Action failed. Object {object} is not toggleable.\nObs: {observation}"
        ]
    },
    "Slice": {
        "success.default": [
            "Feedback: Action succeeded. You sliced {object}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to slice {object}.\nObs: {observation}"
        ],
        "failure.objectIsSliced": [
            "Feedback: Action failed. Object {object} is already sliced.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Object {object} is not in view space.\nObs: {observation}"
        ],
        "failure.notSliceable": [
            "Feedback: Action failed. Object {object} is not sliceable.\nObs: {observation}"
        ]
    },
    "Put":{
        "success.default": [
            "Feedback: Action succeeded. You put {object} into/onto {receptacle}.\nObs: {observation}"
        ],
        "failure.default": [
            "Feedback: Action failed. Failed to place.\nObs: {observation}"
        ],
        "failure.notInView": [
            "Feedback: Action failed. Receptacle {receptacle} is not in view space.\nObs: {observation}"
        ],
        "failure.inventoryFilled": [
            "Feedback: Action failed. You have already held enough object(s), drop one before you pick up another one. "
        ],
        "failure.emptyInventory": [
            "Feedback: Action failed. Inventory is empty, nothing to drop.\nObs: {observation}"
        ],
        "failure.NotInInventory": [
            "Feedback: Action failed. Object {object} is not in your inventory.\nInventory: {inventory}."
        ]
    }

}
